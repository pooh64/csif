kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: csi-csif-ns
#  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: csi-csif-ns
  template:
    metadata:
      labels:
        app: csi-csif-ns
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
#################################################
        - name: liveness-probe
          image: k8s.gcr.io/sig-storage/livenessprobe:v2.1.0
          args:
            - --csi-address=/csi/csi.sock
            - --probe-timeout=3s
            - --health-port=9897
            - --v=2
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
#################################################
        - name: node-driver-registrar
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "rm -rf /registration/csi-csifplugin /registration/csi-csifplugin-reg.sock"]
          args:
            - --v=2
            - --csi-address=/csi/csi.sock
            - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-csifplugin/csi.sock
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
          securityContext:
            privileged: true
#################################################
        - name: csif
          image: pooh64/csif-plugin:latest
          imagePullPolicy: Always
          args:
            - "--drivername=csif.csi.pooh64.io"
            - "--v=5"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--nodeid=$(NODE_NAME)"
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
          ports:
            - containerPort: 9897
              name: healthz
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 20
            timeoutSeconds: 10
            periodSeconds: 20
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: pods-mount-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: "Bidirectional"
            - name: plugins-dir
              mountPath: /var/lib/kubelet/plugins
              mountPropagation: "Bidirectional"
            - name: csi-data-dir
              mountPath: /csi-data-dir
            - name: dev-dir
              mountPath: /dev
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
#################################################
      volumes:
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/csi-csifplugin
            type: DirectoryOrCreate
        - name: pods-mount-dir
          hostPath:
            path: /var/lib/kubelet/pods
            type: Directory
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
        - name: plugins-dir
          hostPath:
            path: /var/lib/kubelet/plugins
            type: Directory
        - name: csi-data-dir
          hostPath:
            path: /var/lib/csi-csif-data/
            type: DirectoryOrCreate
        - name: dev-dir
          hostPath:
            path: /dev
            type: Directory